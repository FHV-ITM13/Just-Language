/* Generated By:JavaCC: Do not edit this line. JustyConstants.java */
package fhv;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JustyConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MINUS = 6;
  /** RegularExpression Id. */
  int MULTIPLY = 7;
  /** RegularExpression Id. */
  int DIVIDE = 8;
  /** RegularExpression Id. */
  int PROGRAM = 9;
  /** RegularExpression Id. */
  int VAR = 10;
  /** RegularExpression Id. */
  int CALL = 11;
  /** RegularExpression Id. */
  int IMPORT = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int BYREF = 14;
  /** RegularExpression Id. */
  int BYVAL = 15;
  /** RegularExpression Id. */
  int COROUTINE = 16;
  /** RegularExpression Id. */
  int SYNCHRONIZED = 17;
  /** RegularExpression Id. */
  int NEW = 18;
  /** RegularExpression Id. */
  int POINT = 19;
  /** RegularExpression Id. */
  int TRUE = 20;
  /** RegularExpression Id. */
  int FALSE = 21;
  /** RegularExpression Id. */
  int END = 22;
  /** RegularExpression Id. */
  int SEPERATOR = 23;
  /** RegularExpression Id. */
  int OR = 24;
  /** RegularExpression Id. */
  int AND = 25;
  /** RegularExpression Id. */
  int OPEN_CURLY = 26;
  /** RegularExpression Id. */
  int CLOSE_CURLY = 27;
  /** RegularExpression Id. */
  int OPEN = 28;
  /** RegularExpression Id. */
  int CLOSE = 29;
  /** RegularExpression Id. */
  int OPEN_RECT = 30;
  /** RegularExpression Id. */
  int CLOSE_RECT = 31;
  /** RegularExpression Id. */
  int EQUAL = 32;
  /** RegularExpression Id. */
  int NOT_EQUAL = 33;
  /** RegularExpression Id. */
  int SMALLER = 34;
  /** RegularExpression Id. */
  int GREATOR = 35;
  /** RegularExpression Id. */
  int SMALLER_EQUAL = 36;
  /** RegularExpression Id. */
  int GREATOR_EQUAL = 37;
  /** RegularExpression Id. */
  int NOT = 38;
  /** RegularExpression Id. */
  int INT = 39;
  /** RegularExpression Id. */
  int BOOL = 40;
  /** RegularExpression Id. */
  int VOID = 41;
  /** RegularExpression Id. */
  int ARRAY = 42;
  /** RegularExpression Id. */
  int IF = 43;
  /** RegularExpression Id. */
  int ELSE = 44;
  /** RegularExpression Id. */
  int DO = 45;
  /** RegularExpression Id. */
  int WHILE = 46;
  /** RegularExpression Id. */
  int ASSIGN = 47;
  /** RegularExpression Id. */
  int IDENTIFIER = 48;
  /** RegularExpression Id. */
  int LOWER_LETTER = 49;
  /** RegularExpression Id. */
  int UPPER_LETTER = 50;
  /** RegularExpression Id. */
  int NUMBER = 51;
  /** RegularExpression Id. */
  int DIGIT = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"program\"",
    "\"var\"",
    "\"call\"",
    "\"import\"",
    "\"return\"",
    "\"byref\"",
    "\"byval\"",
    "\"coroutine\"",
    "\"synchronized\"",
    "\"new\"",
    "\".\"",
    "\"true\"",
    "\"false\"",
    "\";\"",
    "\",\"",
    "\"||\"",
    "\"&&\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"|\"",
    "\"int\"",
    "\"boolean\"",
    "\"void\"",
    "<ARRAY>",
    "\"if\"",
    "\"else\"",
    "\"do\"",
    "\"while\"",
    "\"=\"",
    "<IDENTIFIER>",
    "<LOWER_LETTER>",
    "<UPPER_LETTER>",
    "<NUMBER>",
    "<DIGIT>",
  };

}
